// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

// Modelo de usuários para autenticação
model User {
  id        String   @id @default(cuid())
  email     String   @unique
  name      String?
  password  String
  role      String   @default("user") // "admin" ou "user"
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relacionamentos
  accounts Account[]
  sessions Session[]

  @@map("users")
}

// Modelos do NextAuth.js
model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@map("accounts")
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("sessions")
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
  @@map("verification_tokens")
}

// Modelo de anúncios de ônibus
model Listing {
  id          String   @id @default(cuid())
  title       String
  description String?
  price       Float
  brand       String   // Marca (Mercedes, Volvo, etc.)
  model       String   // Modelo específico
  year        Int
  mileage     Int?     // Quilometragem
  fuel        String?  // Tipo de combustível
  transmission String? // Tipo de câmbio
  capacity    Int?     // Capacidade de passageiros
  location    String?  // Localização
  whatsapp    String?  // Número para contato
  status      String   @default("active") // "active", "sold", "inactive"
  featured    Boolean  @default(false)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // Relacionamentos
  images ListingImage[]

  @@map("listings")
}

// Modelo de imagens dos anúncios
model ListingImage {
  id        String   @id @default(cuid())
  listingId String
  url       String   // URL da imagem no Cloudinary
  publicId  String   // ID público no Cloudinary
  order     Int      @default(0) // Ordem de exibição
  createdAt DateTime @default(now())

  listing Listing @relation(fields: [listingId], references: [id], onDelete: Cascade)

  @@map("listing_images")
}
